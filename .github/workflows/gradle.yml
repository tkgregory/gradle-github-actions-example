name: CI
on:
  # push:
  #   branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  GithubActions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'
          cache: gradle
      - name: Build with Gradle
        run: |
         ./gradlew build
         ls -la
         cd build/libs
         ls -la
      # - name: detect secrets
      #   run: |
      #     pip install detect-secrets
      #     scan_result=$(detect-secrets scan)
      #     if echo "$scan_result" | grep -q '"hashed_secret":'; then
      #     echo "Secrets were found during the scan:"
      #     echo "$scan_result"
      #     #exit 1
      #     else
      #     echo "No secrets were found."
      #     fi
      #     echo "Current Directory (PWD): $PWD"
      #     displayName: 'Secret Detection'
      - name: Run Tests
        run: ./gradlew test
  
      - name: Run Test Coverage
        run: ./gradlew jacocoTestReport
  
      - name: Generate JaCoCo Badge
        uses: cicirello/jacoco-badge-generator@v2
        with:
            generate-branches-badge: true
            jacoco-csv-file: build/reports/jacoco/test/jacocoTestReport.csv
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
           username:  prem19 
           password:  Phoenix@565 
   
      - name: Build Docker image
        run: docker build -t mydockerimage .
     
       
      - name: Tag Docker image
        run: docker tag mydockerimage prem19/prem1903:${GITHUB_RUN_NUMBER}
           
           
      - name: Push Docker image to Docker Hub
        run: |
           echo  Phoenix@565  | docker login -u  prem19  --password-stdin
           docker push prem19/prem1903:${GITHUB_RUN_NUMBER}
      # - name: Add coverage to PR
      #   id: jacoco
      #   uses: madrapps/jacoco-report@v1.6.1
      #   with:
      #        paths: |
      #         build/reports/jacoco/prodNormalDebugCoverage/prodNormalDebugCoverage.html
      #         ls -la
      #         build/reports/jacoco/**/debugCoverage.html
      #        token: ${{ secrets.GITHUB_TOKEN }}
      #        min-coverage-overall: 40
      #        min-coverage-changed-files: 60
      # - name: SonarCloud Scan
      #   uses: actions/checkout@v2
      #   with:
      #     fetch-depth: 0
      # - name: Install dependencies
      #   run: yarn
      # - name: Test and coverage
      #   run: yarn jest --coverage
      # - name: SonarCloud Scan 
      #   uses: sonarsource/sonarcloud-github-action@master
      #   env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  # build-with-setup-java-cache:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v2
  #       with:
  #         java-version: 17
  #         distribution: 'adopt'
  #         cache: gradle
  #     - name: Build with Gradle
  #       run: ./gradlew build --scan --no-daemon
  # build-with-gradle-build-action-cache:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v2
  #       with:
  #         java-version: 17
  #         distribution: 'adopt'
  #     - uses: gradle/gradle-build-action@v2
  #       with:
  #         arguments: build --scan
  # build-with-upload-artifact:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v2
  #       with:
  #         java-version: 17
  #         distribution: 'adopt'
  #         cache: gradle
  #     - name: Build with Gradle
  #       run: ./gradlew build --scan --no-daemon
  #     - name: Archive test report
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: Test report
  #         path: build/reports/tests/test
